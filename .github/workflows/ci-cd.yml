name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/demo-app

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build JAR with Maven
        run: mvn -B -DskipTests clean package

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        run: |
          GIT_SHA=$(git rev-parse --short=8 HEAD)
          echo "IMAGE_TAG=${GIT_SHA}" >> $GITHUB_ENV
          docker build -t $IMAGE_NAME:${GIT_SHA} .
          docker tag $IMAGE_NAME:${GIT_SHA} $IMAGE_NAME:latest

      - name: Push Docker image
        run: |
          docker push $IMAGE_NAME:${IMAGE_TAG}
          docker push $IMAGE_NAME:latest

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }} --region ${{ secrets.AWS_REGION }}

      - name: Deploy to Kubernetes
        run: |
          kubectl set image deployment/demo-deployment demo=${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} -n default || \
          kubectl apply -f k8s/deployment.yaml -n default
          kubectl apply -f k8s/service.yaml -n default
          kubectl rollout status deployment/demo-deployment -n default --timeout=180s
